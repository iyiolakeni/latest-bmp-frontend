{
    "sourceFile": "src/app/form/form.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1734161297108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734161612192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,9 @@\n       merchantId: ['', Validators.required],\r\n       noOfPos: [0, Validators.required],\r\n       notes: ['', Validators.required],\r\n       requestId: [''],\r\n+      requestID: [''],\r\n       status: [''],\r\n       supportingDocument: [''],\r\n       terminalLocation: [[], Validators.required],\r\n       updatedAt: [''],\r\n"
                },
                {
                    "date": 1734161742742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,9 @@\n   ngOnInit() {\r\n     this.user = this.sharedService.getUser();\r\n     this.loadExtraData();\r\n     if (this.data) {\r\n+      console.log('Data:', this.data);\r\n       this.formGroup.patchValue({\r\n         accountNumber: this.data.request.accountNumber,\r\n       bankName: this.data.request.bankName,\r\n       businessCategoryId: this.data.request.businessCategoryId,\r\n"
                },
                {
                    "date": 1734162188987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,8 @@\n   ngOnInit() {\r\n     this.user = this.sharedService.getUser();\r\n     this.loadExtraData();\r\n     if (this.data) {\r\n-      console.log('Data:', this.data);\r\n       this.formGroup.patchValue({\r\n         accountNumber: this.data.request.accountNumber,\r\n       bankName: this.data.request.bankName,\r\n       businessCategoryId: this.data.request.businessCategoryId,\r\n"
                },
                {
                    "date": 1734168432583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   merchant: any;\r\n   cardType:any\r\n   businessCategory:any\r\n   private subscriptions: Subscription[] = []\r\n-\r\n+  isLoading: boolean = false;\r\n   \r\n   tabs = [\r\n     { label: 'REQUEST DETAILS' },\r\n     { label: 'BUSINESS DETAIL' }\r\n@@ -129,8 +129,9 @@\n   }\r\n \r\n   onSubmit() {\r\n     // console.log(this.formGroup.value);\r\n+    this.isLoading = true;\r\n     const payload = {\r\n         noOfPos: this.formGroup.value?.noOfPos,\r\n         terminalLocation: this.formGroup.value?.terminalLocation,\r\n         contactPerson: this.formGroup.value?.contactPerson,\r\n@@ -148,10 +149,12 @@\n       this.requestService.update(this.data.request.id, payload).subscribe(\r\n         (response: any) => {\r\n           console.log('Request updated:', response);\r\n           this.dialogRef.close(response);\r\n+          this.isLoading = false;\r\n         },\r\n         (error) => {\r\n+          this.isLoading = false;\r\n           console.error('Error updating request:', error);\r\n         }\r\n       )\r\n     )\r\n"
                }
            ],
            "date": 1734161297108,
            "name": "Commit-0",
            "content": "import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ApiResponse, UserResponse } from '../interface/books.model';\r\nimport { SharedServiceService } from '../services/shared-service/shared-service.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MerchantService } from '../services/merchant/merchant.service';\r\nimport { BusinessCategoryService } from '../services/business-category/business-category.service';\r\nimport { CardTypeService } from '../services/card-type/card-type.service';\r\nimport { RequestsService } from '../services/requests/requests.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss']\r\n})\r\nexport class FormComponent {\r\n  selectedIndex = 0;\r\n  user!: UserResponse;\r\n  formGroup: FormGroup = new FormGroup({});\r\n  merchant: any;\r\n  cardType:any\r\n  businessCategory:any\r\n  private subscriptions: Subscription[] = []\r\n\r\n  \r\n  tabs = [\r\n    { label: 'REQUEST DETAILS' },\r\n    { label: 'BUSINESS DETAIL' }\r\n  ];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormComponent>,\r\n    private sharedService: SharedServiceService,\r\n    private fb: FormBuilder,\r\n    private merchantService: MerchantService,\r\n    private businessCategoryService: BusinessCategoryService,\r\n    private requestService: RequestsService,\r\n    private cardTypService: CardTypeService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.formGroup = this.fb.group({\r\n      accountNumber: ['', Validators.required],\r\n      bankName: ['', Validators.required],\r\n      businessCategoryId: ['', Validators.required],\r\n      cardTypeId: ['', Validators.required],\r\n      contactNumber: ['', Validators.required],\r\n      contactPerson: ['', Validators.required],\r\n      createdAt: [''],\r\n      merchantId: ['', Validators.required],\r\n      noOfPos: [0, Validators.required],\r\n      notes: ['', Validators.required],\r\n      requestId: [''],\r\n      status: [''],\r\n      supportingDocument: [''],\r\n      terminalLocation: [[], Validators.required],\r\n      updatedAt: [''],\r\n      userName: [''],\r\n      approvedNoOfPos: [],\r\n  })\r\n}\r\n\r\n  ngOnInit() {\r\n    this.user = this.sharedService.getUser();\r\n    this.loadExtraData();\r\n    if (this.data) {\r\n      this.formGroup.patchValue({\r\n        accountNumber: this.data.request.accountNumber,\r\n      bankName: this.data.request.bankName,\r\n      businessCategoryId: this.data.request.businessCategoryId,\r\n      cardTypeId: this.data.request.cardTypeId,\r\n      contactNumber: this.data.request.contactNumber,\r\n      contactPerson: this.data.request.contactPerson,\r\n      createdAt: this.getFormattedDate(this.data.request.createdAt),\r\n      merchantId: this.data.request.merchantId,\r\n      noOfPos: this.data.request.noOfPos,\r\n      notes: this.data.request.notes,\r\n      requestId: this.data.request.requestId,\r\n      requestID: this.data.request.requestID,\r\n      status: this.data.request.status,\r\n      supportingDocument: this.data.request.supportingDocument,\r\n      terminalLocation: this.data.request.terminalLocation,\r\n      updatedAt: this.getFormattedDate(this.data.request.updatedAt),\r\n      userName: this.data.request.userName,\r\n      approvedNoOfPos: this.data.request.approvedNoOfPos || 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\r\n  }\r\n\r\n  toTitleCase(str: string): string {\r\n    if (!str) return str;\r\n    return str.replace(/\\w\\S*/g, (txt) => {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  }\r\n\r\n  selectTab(index: number, event: Event) {\r\n    event?.preventDefault();\r\n    this.selectedIndex = index;\r\n  }\r\n\r\n  loadExtraData() {\r\n    this.merchantList();\r\n    this.cardList();\r\n    this.businessCategoryList();\r\n  }\r\n\r\n  merchantList(){\r\n    this.merchantService.getAll().subscribe((response: ApiResponse<any>) => {\r\n      this.merchant = response.data.data;\r\n    })\r\n  }\r\n\r\n  cardList(){\r\n    this.cardTypService.getAll().subscribe((response: ApiResponse<any>) => {\r\n      this.cardType = response.data.data;\r\n    })\r\n  }\r\n\r\n  businessCategoryList(){\r\n    this.businessCategoryService.getAll().subscribe((response: ApiResponse<any>) => {\r\n      this.businessCategory = response.data.data;\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    // console.log(this.formGroup.value);\r\n    const payload = {\r\n        noOfPos: this.formGroup.value?.noOfPos,\r\n        terminalLocation: this.formGroup.value?.terminalLocation,\r\n        contactPerson: this.formGroup.value?.contactPerson,\r\n        contactNumber: this.formGroup.value?.contactNumber,\r\n        bankName: this.formGroup.value?.bankName,\r\n        accountNumber: this.formGroup.value?.accountNumber,\r\n        notes: this.formGroup.value?.notes,\r\n        userId: this.data.request.userId,\r\n        cardTypeId: this.formGroup.value?.cardTypeId,\r\n        businessCategoryId: this.formGroup.value?.businessCategoryId,\r\n        merchantId: this.formGroup.value?.merchantId,\r\n      \r\n    }\r\n    this.subscriptions.push(\r\n      this.requestService.update(this.data.request.id, payload).subscribe(\r\n        (response: any) => {\r\n          console.log('Request updated:', response);\r\n          this.dialogRef.close(response);\r\n        },\r\n        (error) => {\r\n          console.error('Error updating request:', error);\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  getFormattedDate(dateString: string): string {\r\n    try {\r\n      const date = new Date(dateString);\r\n      if (isNaN(date.getTime())) {\r\n        throw new Error('Invalid date');\r\n      }\r\n      const options: Intl.DateTimeFormatOptions = {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n      };\r\n      const formattedDate = date\r\n        .toLocaleDateString('en-GB', options)\r\n        .replace(/\\//g, '-');\r\n  \r\n      return formattedDate;\r\n    } catch (error) {\r\n      console.error('Error formatting date:', error);\r\n      return 'Invalid date';\r\n    }\r\n  }\r\n}"
        }
    ]
}