{
    "sourceFile": "src/app/deploy-dialog/deploy-dialog.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1734035907334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734163673747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,14 @@\n import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n import { ApiResponse, UserResponse } from '../interface/books.model';\r\n import { SharedServiceService } from '../services/shared-service/shared-service.service';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n-import { MerchantService } from '../services/merchant/merchant.service';\r\n-import { BusinessCategoryService } from '../services/business-category/business-category.service';\r\n-import { CardTypeService } from '../services/card-type/card-type.service';\r\n import { Subscription } from 'rxjs';\r\n-import { RequestsService } from '../services/requests/requests.service';\r\n+import { ModelService } from '../services/model/model.service';\r\n+import { PtspService } from '../services/ptsp/ptsp.service';\r\n+import { ProcessorService } from '../services/processor/processor.service';\r\n+import { AccountService } from '../services/account/account.service';\r\n+import { DeployedTableService } from '../services/deployed-table/deployed-table.service';\r\n @Component({\r\n   selector: 'app-deploy-dialog',\r\n   templateUrl: './deploy-dialog.component.html',\r\n   styleUrl: './deploy-dialog.component.scss'\r\n@@ -16,11 +17,12 @@\n export class DeployDialogComponent {\r\n   selectedIndex = 0;\r\n   user!: UserResponse;\r\n   formGroup: FormGroup = new FormGroup({});\r\n-  merchant: any;\r\n-  cardType: any;\r\n-  businessCategory: any;\r\n+  model: any;\r\n+  ptsp: any;\r\n+  account: any;\r\n+  processor: any;\r\n   private subscriptions: Subscription[] = [];\r\n   apiResponse: string = '';\r\n   show: boolean = false;\r\n   message: string = '';\r\n@@ -29,25 +31,21 @@\n   constructor(\r\n     public dialogRef: MatDialogRef<DeployDialogComponent>,\r\n     private sharedService: SharedServiceService,\r\n     private fb: FormBuilder,\r\n-    private merchantService: MerchantService,\r\n-    private businessCategoryService: BusinessCategoryService,\r\n-    private cardTypService: CardTypeService,\r\n-    private service: RequestsService,\r\n+    private modelService: ModelService,\r\n+    private ptspService: PtspService,\r\n+    private processorService: ProcessorService,\r\n+    private accountService: AccountService,\r\n+    private service: DeployedTableService,\r\n     @Inject(MAT_DIALOG_DATA) public data: any\r\n   ) {\r\n     this.formGroup = this.fb.group({\r\n-      noOfPos: [0, Validators.required],\r\n-      terminalLocation: [[], Validators.required],\r\n-      contactPerson: ['', Validators.required],\r\n-      contactNumber: ['', Validators.required],\r\n-      bankName: ['', Validators.required],\r\n-      accountNumber: ['', Validators.required],\r\n       notes: [''],\r\n-      cardTypeId: ['', Validators.required],\r\n-      businessCategoryId: ['', Validators.required],\r\n-      merchantId: ['', Validators.required],\r\n+      modelId: ['', Validators.required],\r\n+      ptspId: ['', Validators.required],\r\n+      processorId: ['', Validators.required],\r\n+      accountId: ['', Validators.required],\r\n     });\r\n   }\r\n \r\n   ngOnInit() {\r\n@@ -66,35 +64,46 @@\n     this.selectedIndex = index;\r\n   }\r\n \r\n   loadExtraData() {\r\n-    this.merchantList();\r\n-    this.cardList();\r\n-    this.businessCategoryList();\r\n+    this.modelList();\r\n+    this.ptspList();\r\n+    this.processorList();\r\n+    this.accountList();\r\n   }\r\n \r\n-  merchantList() {\r\n-    this.subscriptions.push(this.merchantService.getAll().subscribe((response: ApiResponse<any>) => {\r\n-      this.merchant = response.data.data;\r\n+  modelList() {\r\n+    this.subscriptions.push(this.modelService.getAll().subscribe((response: ApiResponse<any>) => {\r\n+      this.model = response.data.data;\r\n     }));\r\n   }\r\n \r\n-  cardList() {\r\n-    this.subscriptions.push(this.cardTypService.getAll().subscribe((response: ApiResponse<any>) => {\r\n-      this.cardType = response.data.data;\r\n+  ptspList() {\r\n+    this.subscriptions.push(this.ptspService.getAll().subscribe((response: ApiResponse<any>) => {\r\n+      this.ptsp = response.data.data;\r\n     }));\r\n   }\r\n \r\n-  businessCategoryList() {\r\n+  processorList() {\r\n     this.subscriptions.push(\r\n-      this.businessCategoryService\r\n+      this.processorService\r\n         .getAll()\r\n         .subscribe((response: ApiResponse<any>) => {\r\n-          this.businessCategory = response.data.data;\r\n+          this.processor = response.data.data;\r\n         })\r\n     );\r\n   }\r\n \r\n+  accountList() {\r\n+    this.subscriptions.push(\r\n+      this.accountService\r\n+        .getAll()\r\n+        .subscribe((response: ApiResponse<any>) => {\r\n+          this.account = response.data.data;\r\n+        })\r\n+    );\r\n+  }\r\n+\r\n   onClose() {\r\n     this.dialogRef.close();\r\n   }\r\n \r\n@@ -102,12 +111,14 @@\n     console.log(this.formGroup.value);\r\n     if (this.formGroup.valid) {\r\n       const payload ={\r\n         ...this.formGroup.value,\r\n-        userId: this.user.id,\r\n+        status: 'deployed',\r\n+        approvedNoOfPos: this.data.approveNoOfPos,\r\n+        deployedBy: this.user.id,\r\n       } \r\n       this.subscriptions.push(\r\n-        this.service.create(payload).subscribe((response: ApiResponse<any>) => {\r\n+        this.service.deployRequest(this.data.id,payload).subscribe((response: ApiResponse<any>) => {\r\n           if (response.data.success) {\r\n             this.show = true;\r\n             this.message = 'success'\r\n             this.apiResponse = response.data.message;\r\n"
                },
                {
                    "date": 1734165244916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   private subscriptions: Subscription[] = [];\r\n   apiResponse: string = '';\r\n   show: boolean = false;\r\n   message: string = '';\r\n-  tabs = [{ label: 'REQUEST FORM' }];\r\n+  tabs = [{ label: 'DEPLOYMENT FORM' }];\r\n \r\n   constructor(\r\n     public dialogRef: MatDialogRef<DeployDialogComponent>,\r\n     private sharedService: SharedServiceService,\r\n"
                },
                {
                    "date": 1734165300395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,9 @@\n \r\n   ngOnInit() {\r\n     this.user = this.sharedService.getUser();\r\n     this.loadExtraData();\r\n+    console.log(this.data);\r\n   }\r\n \r\n   toTitleCase(str: string): string {\r\n     if (!str) return str;\r\n"
                },
                {
                    "date": 1734165331819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n         approvedNoOfPos: this.data.approveNoOfPos,\r\n         deployedBy: this.user.id,\r\n       } \r\n       this.subscriptions.push(\r\n-        this.service.deployRequest(this.data.id,payload).subscribe((response: ApiResponse<any>) => {\r\n+        this.service.deployRequest(this.data.request.id,payload).subscribe((response: ApiResponse<any>) => {\r\n           if (response.data.success) {\r\n             this.show = true;\r\n             this.message = 'success'\r\n             this.apiResponse = response.data.message;\r\n"
                },
                {
                    "date": 1734165491421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n             })\r\n           } else {\r\n             this.show = true;\r\n             this.message = 'error'\r\n-            this.apiResponse = \"Error creating request, try again\";\r\n+            this.apiResponse = response.data.message;\r\n             setTimeout(() =>{\r\n               this.show = false;\r\n             }, 5000)\r\n           }\r\n"
                },
                {
                    "date": 1734165574647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \r\n   ngOnInit() {\r\n     this.user = this.sharedService.getUser();\r\n     this.loadExtraData();\r\n-    console.log(this.data);\r\n+    console.log(this.user);\r\n   }\r\n \r\n   toTitleCase(str: string): string {\r\n     if (!str) return str;\r\n@@ -108,9 +108,8 @@\n     this.dialogRef.close();\r\n   }\r\n \r\n   onSubmit() {\r\n-    console.log(this.formGroup.value);\r\n     if (this.formGroup.valid) {\r\n       const payload ={\r\n         ...this.formGroup.value,\r\n         status: 'deployed',\r\n"
                },
                {
                    "date": 1734166204303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n   apiResponse: string = '';\r\n   show: boolean = false;\r\n   message: string = '';\r\n   tabs = [{ label: 'DEPLOYMENT FORM' }];\r\n+  userId : string =  '';\r\n \r\n   constructor(\r\n     public dialogRef: MatDialogRef<DeployDialogComponent>,\r\n     private sharedService: SharedServiceService,\r\n@@ -50,9 +51,10 @@\n \r\n   ngOnInit() {\r\n     this.user = this.sharedService.getUser();\r\n     this.loadExtraData();\r\n-    console.log(this.user);\r\n+    this.userId = this.user.id;\r\n+    console.log(this.userId);\r\n   }\r\n \r\n   toTitleCase(str: string): string {\r\n     if (!str) return str;\r\n@@ -113,9 +115,9 @@\n       const payload ={\r\n         ...this.formGroup.value,\r\n         status: 'deployed',\r\n         approvedNoOfPos: this.data.approveNoOfPos,\r\n-        deployedBy: this.user.id,\r\n+        deployedById: this.userId,\r\n       } \r\n       this.subscriptions.push(\r\n         this.service.deployRequest(this.data.request.id,payload).subscribe((response: ApiResponse<any>) => {\r\n           if (response.data.success) {\r\n"
                },
                {
                    "date": 1734168376710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n   show: boolean = false;\r\n   message: string = '';\r\n   tabs = [{ label: 'DEPLOYMENT FORM' }];\r\n   userId : string =  '';\r\n+  isLoading: boolean = false;\r\n \r\n   constructor(\r\n     public dialogRef: MatDialogRef<DeployDialogComponent>,\r\n     private sharedService: SharedServiceService,\r\n@@ -110,8 +111,9 @@\n     this.dialogRef.close();\r\n   }\r\n \r\n   onSubmit() {\r\n+    this.isLoading = true;\r\n     if (this.formGroup.valid) {\r\n       const payload ={\r\n         ...this.formGroup.value,\r\n         status: 'deployed',\r\n@@ -123,24 +125,27 @@\n           if (response.data.success) {\r\n             this.show = true;\r\n             this.message = 'success'\r\n             this.apiResponse = response.data.message;\r\n+            this.isLoading = false;\r\n             setTimeout(() =>{\r\n               this.show = false;\r\n               this.dialogRef.close();\r\n             })\r\n           } else {\r\n             this.show = true;\r\n             this.message = 'error'\r\n             this.apiResponse = response.data.message;\r\n+            this.isLoading = false;\r\n             setTimeout(() =>{\r\n               this.show = false;\r\n             }, 5000)\r\n           }\r\n         })\r\n       );\r\n     }else{\r\n       this.show = true;\r\n+      this.isLoading = false;\r\n       this.message = 'warning'\r\n       this.apiResponse = 'Please fill all required fields';\r\n       setTimeout(() =>{\r\n         this.show = false;\r\n"
                }
            ],
            "date": 1734035907334,
            "name": "Commit-0",
            "content": "import { Component, Inject, Output } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ApiResponse, UserResponse } from '../interface/books.model';\r\nimport { SharedServiceService } from '../services/shared-service/shared-service.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MerchantService } from '../services/merchant/merchant.service';\r\nimport { BusinessCategoryService } from '../services/business-category/business-category.service';\r\nimport { CardTypeService } from '../services/card-type/card-type.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { RequestsService } from '../services/requests/requests.service';\r\n@Component({\r\n  selector: 'app-deploy-dialog',\r\n  templateUrl: './deploy-dialog.component.html',\r\n  styleUrl: './deploy-dialog.component.scss'\r\n})\r\nexport class DeployDialogComponent {\r\n  selectedIndex = 0;\r\n  user!: UserResponse;\r\n  formGroup: FormGroup = new FormGroup({});\r\n  merchant: any;\r\n  cardType: any;\r\n  businessCategory: any;\r\n  private subscriptions: Subscription[] = [];\r\n  apiResponse: string = '';\r\n  show: boolean = false;\r\n  message: string = '';\r\n  tabs = [{ label: 'REQUEST FORM' }];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeployDialogComponent>,\r\n    private sharedService: SharedServiceService,\r\n    private fb: FormBuilder,\r\n    private merchantService: MerchantService,\r\n    private businessCategoryService: BusinessCategoryService,\r\n    private cardTypService: CardTypeService,\r\n    private service: RequestsService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.formGroup = this.fb.group({\r\n      noOfPos: [0, Validators.required],\r\n      terminalLocation: [[], Validators.required],\r\n      contactPerson: ['', Validators.required],\r\n      contactNumber: ['', Validators.required],\r\n      bankName: ['', Validators.required],\r\n      accountNumber: ['', Validators.required],\r\n      notes: [''],\r\n      cardTypeId: ['', Validators.required],\r\n      businessCategoryId: ['', Validators.required],\r\n      merchantId: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user = this.sharedService.getUser();\r\n    this.loadExtraData();\r\n  }\r\n\r\n  toTitleCase(str: string): string {\r\n    if (!str) return str;\r\n    return str.replace(/\\w\\S*/g, (txt) => {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  }\r\n\r\n  selectTab(index: number) {\r\n    this.selectedIndex = index;\r\n  }\r\n\r\n  loadExtraData() {\r\n    this.merchantList();\r\n    this.cardList();\r\n    this.businessCategoryList();\r\n  }\r\n\r\n  merchantList() {\r\n    this.subscriptions.push(this.merchantService.getAll().subscribe((response: ApiResponse<any>) => {\r\n      this.merchant = response.data.data;\r\n    }));\r\n  }\r\n\r\n  cardList() {\r\n    this.subscriptions.push(this.cardTypService.getAll().subscribe((response: ApiResponse<any>) => {\r\n      this.cardType = response.data.data;\r\n    }));\r\n  }\r\n\r\n  businessCategoryList() {\r\n    this.subscriptions.push(\r\n      this.businessCategoryService\r\n        .getAll()\r\n        .subscribe((response: ApiResponse<any>) => {\r\n          this.businessCategory = response.data.data;\r\n        })\r\n    );\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.formGroup.value);\r\n    if (this.formGroup.valid) {\r\n      const payload ={\r\n        ...this.formGroup.value,\r\n        userId: this.user.id,\r\n      } \r\n      this.subscriptions.push(\r\n        this.service.create(payload).subscribe((response: ApiResponse<any>) => {\r\n          if (response.data.success) {\r\n            this.show = true;\r\n            this.message = 'success'\r\n            this.apiResponse = response.data.message;\r\n            setTimeout(() =>{\r\n              this.show = false;\r\n              this.dialogRef.close();\r\n            })\r\n          } else {\r\n            this.show = true;\r\n            this.message = 'error'\r\n            this.apiResponse = \"Error creating request, try again\";\r\n            setTimeout(() =>{\r\n              this.show = false;\r\n            }, 5000)\r\n          }\r\n        })\r\n      );\r\n    }else{\r\n      this.show = true;\r\n      this.message = 'warning'\r\n      this.apiResponse = 'Please fill all required fields';\r\n      setTimeout(() =>{\r\n        this.show = false;\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  getFormattedDate(dateString: string): string {\r\n    try {\r\n      const date = new Date(dateString);\r\n      if (isNaN(date.getTime())) {\r\n        throw new Error('Invalid date');\r\n      }\r\n      const options: Intl.DateTimeFormatOptions = {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n      };\r\n      const formattedDate = date\r\n        .toLocaleDateString('en-GB', options)\r\n        .replace(/\\//g, '-');\r\n\r\n      return formattedDate;\r\n    } catch (error) {\r\n      console.error('Error formatting date:', error);\r\n      return 'Invalid date';\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\r\n  }\r\n}\r\n"
        }
    ]
}