{
    "sourceFile": "src/app/sidebar/sidebar.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734029467389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734029467389,
            "name": "Commit-0",
            "content": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { SidebarItem } from '../interface/sidebar';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrl: './sidebar.component.scss'\r\n})\r\nexport class SidebarComponent {\r\n  isOpen = true;\r\n  @Output() size= new EventEmitter< string>();\r\n  expandedItems: { [key: string]: boolean } = {};\r\n\r\n  constructor(\r\n    private router: Router\r\n  ){\r\n  }\r\n  sidebarItem: SidebarItem[] =[\r\n    {\r\n      icon: 'home',\r\n      text: 'Home',\r\n      route: '/dashboard'\r\n    },\r\n    {\r\n      icon: 'request',\r\n      text: 'Request',\r\n      route: '/all-request',\r\n      // caret: 'caret',\r\n      // children:[{\r\n      //   icon: 'pending',\r\n      //   text: 'Pending',\r\n      //   route: '/pending-request'\r\n      // },\r\n      // {\r\n      //   icon: 'approved',\r\n      //   text: 'Approved',\r\n      //   route: '/approved-request'\r\n      // },\r\n      // {\r\n      //   icon: 'rejected',\r\n      //   text: 'Rejected',\r\n      //   route: '/rejected-request'\r\n      // },\r\n      // {\r\n      //   icon: 'delivered',\r\n      //   text: 'Delivered',\r\n      //   route: '/delivered-request'\r\n      // },\r\n      // {\r\n      //   icon: 'deployed',\r\n      //   text: 'Deployed',\r\n      //   route: '/deployed-request'\r\n      // }\r\n    // ]\r\n    },\r\n    {\r\n      icon: 'logout',\r\n      text: 'Logout',\r\n      route: '/'\r\n    }\r\n  ]\r\n\r\n  toggleSidebar(){\r\n    this.isOpen = !this.isOpen;\r\n    if(this.isOpen){\r\n      this.size.emit('w-64');\r\n    }else{\r\n      this.size.emit('w-16');\r\n    }\r\n  }\r\n\r\n  toggleSubmenu(item: SidebarItem) {\r\n    if (item.text) {\r\n      this.expandedItems[item.text] = !this.expandedItems[item.text];\r\n    }\r\n  }\r\n\r\n  navigateTo(route: string){\r\n    this.router.navigate([route]);\r\n  }\r\n}\r\n"
        }
    ]
}