{
    "sourceFile": "src/app/services/account/account.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734035796700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734035796700,
            "name": "Commit-0",
            "content": "import { Injectable } from '@angular/core';\r\nimport { ACCOUNTS } from '../../constants/url.constants';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, catchError } from 'rxjs';\r\nimport { ErrorHandlerService } from '../error-handler/error-handler.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private errorHandler: ErrorHandlerService\r\n  ) { }\r\n\r\n  create(formdata: any): Observable<any> {\r\n    return this.http.post(`${ACCOUNTS}/create`, formdata).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get(`${ACCOUNTS}/get-all`).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n\r\n  getAllArchived(): Observable<any> {\r\n    return this.http.get(`${ACCOUNTS}/get-all-archived`).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n\r\n  getById(id: any): Observable<any> {\r\n    return this.http.get(`${ACCOUNTS}/get-by-id/${id}`).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n\r\n  update(id: string, formData: any): Observable<any> {\r\n    return this.http.patch(`${ACCOUNTS}/update/${id}`, formData).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n\r\n  activate(id: string): Observable<any> {\r\n    return this.http.patch(`${ACCOUNTS}/activate/${id}`, {}).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n\r\n  deactivate(id: string): Observable<any> {\r\n    return this.http.patch(`${ACCOUNTS}/deactivate/${id}`, {}).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n\r\n  archive(id: string): Observable<any> {\r\n    return this.http.patch(`${ACCOUNTS}/archive/${id}`, {}).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n\r\n  restore(id: string): Observable<any> {\r\n    return this.http.patch(`${ACCOUNTS}/restore/${id}`, {}).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n  delete(id: string): Observable<any> {\r\n    return this.http.delete(`${ACCOUNTS}/delete/${id}`).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n}\r\n"
        }
    ]
}