{
    "sourceFile": "src/app/services/deployed-table/deployed-table.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1734034266070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734165377722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,17 +52,17 @@\n     )\r\n   }\r\n \r\n   deployRequest(id: string, formData: any): Observable<any>{\r\n-    return this.http.put(`${DEPLOYED_TABLE}/approve-status/${id}`, formData).pipe(\r\n+    return this.http.patch(`${DEPLOYED_TABLE}/approve-status/${id}`, formData).pipe(\r\n       catchError(\r\n         this.errorHandler.errorHandler\r\n       )\r\n     )\r\n   }\r\n \r\n   deliverRequest(id: string, formData: any): Observable<any>{\r\n-    return this.http.put(`${DEPLOYED_TABLE}/delivery-status/${id}`, formData).pipe(\r\n+    return this.http.patch(`${DEPLOYED_TABLE}/delivery-status/${id}`, formData).pipe(\r\n       catchError(\r\n         this.errorHandler.errorHandler\r\n       )\r\n     )\r\n"
                }
            ],
            "date": 1734034266070,
            "name": "Commit-0",
            "content": "import { Injectable } from '@angular/core';\r\nimport { DEPLOYED_TABLE } from '../../constants/url.constants';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { ErrorHandlerService } from '../error-handler/error-handler.service';\r\nimport { catchError, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeployedTableService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private errorHandler: ErrorHandlerService\r\n  ) { }\r\n\r\n  getAll(\r\n    page: number = 1,\r\n    limit: number = 10,\r\n    sortBy: string = 'createdAt',\r\n    sortDirection: string = 'desc'\r\n  ): Observable<any>{\r\n    let params = new HttpParams()\r\n    .set('page', page)\r\n    .set('limit', limit)\r\n    .set('sortBy', sortBy)\r\n    .set('sortDirection', sortDirection);\r\n    return this.http.get(`${DEPLOYED_TABLE}/get-all`, {params}).pipe(\r\n      catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n\r\n  getDeployedRequest(): Observable<any>{\r\n    return this.http.get(`${DEPLOYED_TABLE}/get-all-deployed-request`).pipe(\r\n      catchError(\r\n        this.errorHandler.errorHandler\r\n      )\r\n    )\r\n  }\r\n\r\n  getPendinRequest(): Observable<any>{\r\n    return this.http.get(`${DEPLOYED_TABLE}/get-all-pending-request`).pipe(\r\n      catchError(\r\n        this.errorHandler.errorHandler\r\n      )\r\n    )\r\n  }\r\n\r\n  getDeliveredRequest(): Observable<any>{\r\n    return this.http.get(`${DEPLOYED_TABLE}/get-all-delivered-request`).pipe(\r\n       catchError(this.errorHandler.errorHandler)\r\n    )\r\n  }\r\n\r\n  deployRequest(id: string, formData: any): Observable<any>{\r\n    return this.http.put(`${DEPLOYED_TABLE}/approve-status/${id}`, formData).pipe(\r\n      catchError(\r\n        this.errorHandler.errorHandler\r\n      )\r\n    )\r\n  }\r\n\r\n  deliverRequest(id: string, formData: any): Observable<any>{\r\n    return this.http.put(`${DEPLOYED_TABLE}/delivery-status/${id}`, formData).pipe(\r\n      catchError(\r\n        this.errorHandler.errorHandler\r\n      )\r\n    )\r\n  }\r\n\r\n  getRequestById(id: string): Observable<any>{\r\n    return this.http.get(`${DEPLOYED_TABLE}/get-one/${id}`).pipe(\r\n      catchError(\r\n        this.errorHandler.errorHandler)\r\n      )\r\n  }\r\n\r\n}\r\n"
        }
    ]
}